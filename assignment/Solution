
class Solution {
public:
  void dfs(int j,vector<bool>&visit,vector<int>>&connections){
      visit[j]=true;
      for(int a:connections[j]){
          if(!visit[a])
          dfs(a,visit,connections);
      }
  }
    int makeConnected(int n, vector<vector<int>>& connections) {
        vector<vector<int>>adj(n+1);
        for(int j=0;j<connections.size();j++)
        {
            adj[connections[j][0]].push_back(connections[j][1]);
            adj[connections[j][1]].push_back(connections[j][0]);

            
        }
        if(connections.size()<n-1)
        return -1;
        int c=0;
        vector<bool>visit(n+1,false);
        for(int j=0;j<n;j++)
        {
            if(!visit[i])
            {
                dfs(j,visit,adj);
                c++;
            }
        }
        c--;
        return c;

        
    }
};
